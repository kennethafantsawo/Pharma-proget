// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A pharmacy chatbot AI agent.
 *
 * - pharmacyChatbot - A function that handles the pharmacy chatbot process.
 * - PharmacyChatbotInput - The input type for the pharmacyChatbot function.
 * - PharmacyChatbotOutput - The return type for the pharmacyChatbot function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PharmacyChatbotInputSchema = z.object({
  query: z.string().describe('The user query about medication, dosage, side effects, or other pharmacy-related inquiries.'),
});
export type PharmacyChatbotInput = z.infer<typeof PharmacyChatbotInputSchema>;

const PharmacyChatbotOutputSchema = z.object({
  response: z.string().describe('The response from the AI chatbot, providing information like a real pharmacist.'),
});
export type PharmacyChatbotOutput = z.infer<typeof PharmacyChatbotOutputSchema>;

export async function pharmacyChatbot(input: PharmacyChatbotInput): Promise<PharmacyChatbotOutput> {
  return pharmacyChatbotFlow(input);
}

const prompt = ai.definePrompt({
  name: 'pharmacyChatbotPrompt',
  input: {schema: PharmacyChatbotInputSchema},
  output: {schema: PharmacyChatbotOutputSchema},
  prompt: `You are a helpful and informative AI chatbot specializing in pharmacy-related questions. Respond to the user's query as a real pharmacist would, providing reliable information on medication dosage, side effects, and other relevant inquiries.

User Query: {{{query}}}`,config: {
    safetySettings: [
      {
        category: 'HARM_CATEGORY_HATE_SPEECH',
        threshold: 'BLOCK_ONLY_HIGH',
      },
      {
        category: 'HARM_CATEGORY_DANGEROUS_CONTENT',
        threshold: 'BLOCK_NONE',
      },
      {
        category: 'HARM_CATEGORY_HARASSMENT',
        threshold: 'BLOCK_MEDIUM_AND_ABOVE',
      },
      {
        category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
        threshold: 'BLOCK_LOW_AND_ABOVE',
      },
    ],
  },
});

const pharmacyChatbotFlow = ai.defineFlow(
  {
    name: 'pharmacyChatbotFlow',
    inputSchema: PharmacyChatbotInputSchema,
    outputSchema: PharmacyChatbotOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
